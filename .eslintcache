[{"C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\index.tsx":"1","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\reportWebVitals.ts":"2","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\App.tsx":"3","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Header.tsx":"4","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Home\\index.ts":"5","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Home\\home.tsx":"6","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Home\\home-styles.ts":"7","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Product\\index.ts":"8","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Product\\product.tsx":"9","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Product\\product.styles.tsx":"10","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Data\\products-list.ts":"11"},{"size":493,"mtime":1611157004295,"results":"12","hashOfConfig":"13"},{"size":416,"mtime":1611157012423,"results":"14","hashOfConfig":"13"},{"size":667,"mtime":1613233464752,"results":"15","hashOfConfig":"13"},{"size":1860,"mtime":1613223715518,"results":"16","hashOfConfig":"13"},{"size":34,"mtime":1613233392957,"results":"17","hashOfConfig":"13"},{"size":1019,"mtime":1614169594635,"results":"18","hashOfConfig":"13"},{"size":839,"mtime":1613307131625,"results":"19","hashOfConfig":"13"},{"size":37,"mtime":1613304609585,"results":"20","hashOfConfig":"13"},{"size":2194,"mtime":1614172299685,"results":"21","hashOfConfig":"13"},{"size":1881,"mtime":1614170446339,"results":"22","hashOfConfig":"13"},{"size":1784,"mtime":1614169393562,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"j2alzt",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\index.tsx",[],["49","50","51","52","53","54"],"C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\reportWebVitals.ts",["55"],"import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\App.tsx",[],"C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Header.tsx",[],"C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Home\\index.ts",[],"C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Home\\home.tsx",[],"C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Home\\home-styles.ts",[],"C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Product\\index.ts",[],"C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Product\\product.tsx",["56","57"],"import React from 'react'\r\nimport {\r\n  StyledBody,\r\n  StyledContainer,\r\n  StyledHeader,\r\n  StyledItemLink,\r\n  StyledLinkImage,\r\n  StyledLinkSection1,\r\n  StyledLinkSection2,\r\n  StyledListSection1,\r\n  StyledListSection2,\r\n  StyledProductItemWrapper,\r\n  StyledProductListWrapper,\r\n  StyledProductWrapper\r\n} from './product.styles'\r\n\r\ninterface TItem {\r\n  floatRight?: boolean\r\n}\r\ntype TProductItem = {\r\n  link: string\r\n  displayName: string\r\n}\r\ntype TProductList = {\r\n  itemsList: Array<TProductItem>\r\n}\r\ntype TProduct = {\r\n  productCategoryName: string\r\n  itemsList: Array<TProductItem>\r\n}\r\n\r\nconst ProductItem: React.FC<TProductItem> = ({\r\n  link,\r\n  displayName\r\n}: TProductItem) => {\r\n  return (\r\n    <StyledProductItemWrapper>\r\n      <StyledItemLink>\r\n        <StyledLinkSection1>\r\n          <StyledLinkImage alt={displayName} src={link} />\r\n        </StyledLinkSection1>\r\n        <StyledLinkSection2>{displayName}</StyledLinkSection2>\r\n      </StyledItemLink>\r\n    </StyledProductItemWrapper>\r\n  )\r\n}\r\n\r\nfunction ProductList({ itemsList }: TProductList): React.ReactElement {\r\n  return (\r\n    <StyledProductListWrapper>\r\n      <StyledListSection1>\r\n        <ProductItem\r\n          link={itemsList[0].link}\r\n          displayName={itemsList[0].displayName}\r\n        />\r\n        <ProductItem\r\n          link={itemsList[1].link}\r\n          displayName={itemsList[1].displayName}\r\n        />\r\n      </StyledListSection1>\r\n      <StyledListSection1>\r\n        <ProductItem\r\n          link={itemsList[2].link}\r\n          displayName={itemsList[2].displayName}\r\n        />\r\n        <ProductItem\r\n          link={itemsList[3].link}\r\n          displayName={itemsList[3].displayName}\r\n        />\r\n      </StyledListSection1>\r\n    </StyledProductListWrapper>\r\n  )\r\n}\r\nconst Product: React.FC<TProduct> = ({\r\n  productCategoryName,\r\n  itemsList\r\n}: TProduct) => {\r\n  return (\r\n    <StyledProductWrapper>\r\n      <StyledContainer>\r\n        <StyledHeader>\r\n          <h2>{productCategoryName}</h2>\r\n        </StyledHeader>\r\n        <StyledBody>\r\n          <ProductList itemsList={itemsList} />\r\n        </StyledBody>\r\n      </StyledContainer>\r\n    </StyledProductWrapper>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Features\\Product\\product.styles.tsx",[],"C:\\KiranKumarK\\Projects\\GitHub\\React\\05-AmazonClone\\amazon-clone\\src\\Data\\products-list.ts",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":25,"nodeType":"72","messageId":"73","endLine":3,"endColumn":57},{"ruleId":"74","severity":1,"message":"75","line":11,"column":3,"nodeType":"76","messageId":"77","endLine":11,"endColumn":21},{"ruleId":"74","severity":1,"message":"78","line":17,"column":11,"nodeType":"76","messageId":"77","endLine":17,"endColumn":16},"jest/no-try-expect",["79"],"lines-around-directive",["80"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'StyledListSection2' is defined but never used.","Identifier","unusedVar","'TItem' is defined but never used.","no-conditional-expect","padding-line-between-statements"]